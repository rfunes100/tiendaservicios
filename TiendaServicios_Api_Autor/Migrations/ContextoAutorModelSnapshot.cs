// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TiendaServicios_Api_Autor.Persistencia;

namespace TiendaServicios_Api_Autor.Migrations
{
    [DbContext(typeof(ContextoAutor))]
    partial class ContextoAutorModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TiendaServicios_Api_Autor.Modelo.AutorLibro", b =>
                {
                    b.Property<int>("AutorLibroid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("AutorLibroGuid")
                        .HasColumnType("text");

                    b.Property<string>("apellido")
                        .HasColumnType("text");

                    b.Property<DateTime?>("fechaNacimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("AutorLibroid");

                    b.ToTable("AutorLbro");
                });

            modelBuilder.Entity("TiendaServicios_Api_Autor.Modelo.GradoAcademico", b =>
                {
                    b.Property<int>("gradoacademicoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("AutorLibroid")
                        .HasColumnType("integer");

                    b.Property<string>("CentroAcademico")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaGrado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GradoAcademicoGuid")
                        .HasColumnType("text");

                    b.HasKey("gradoacademicoid");

                    b.HasIndex("AutorLibroid");

                    b.ToTable("GradoAcademico");
                });

            modelBuilder.Entity("TiendaServicios_Api_Autor.Modelo.GradoAcademico", b =>
                {
                    b.HasOne("TiendaServicios_Api_Autor.Modelo.AutorLibro", "AutorLibro")
                        .WithMany("ListaGradoAcademico")
                        .HasForeignKey("AutorLibroid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AutorLibro");
                });

            modelBuilder.Entity("TiendaServicios_Api_Autor.Modelo.AutorLibro", b =>
                {
                    b.Navigation("ListaGradoAcademico");
                });
#pragma warning restore 612, 618
        }
    }
}
